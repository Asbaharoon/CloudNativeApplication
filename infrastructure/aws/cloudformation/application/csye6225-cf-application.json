{
 "AWSTemplateFormatVersion" : "2010-09-09",
 "Description":"Creating ",
 "Parameters": {
   "webSecurityGroupTag" : {
   "Type" : "String"
  },
  "dbSecurityGroupTag" : {
   "Type" : "String"
  },
  "keyTag" : {
   "Type" : "String"
  },
  "ec2InstanceTag" : {
  "Type" : "String"
  },
 "amiId" : {
  "Type" : "String"
  },
  "DBUSER" : {
  "Type" : "String"
  },
   "DBPWD" : {
  "Type" : "String"
  },
  "accountID": {
    "Type": "String"
  },
  "awsRegion": {
    "Type": "String"
  },
  "applicationName": {
    "Type": "String"
  },
  "s3CodeDeploy": {
    "Type": "String"
  }, 
  "s3Attachment": {
    "Type": "String"
  }
 },
 "Resources" : {
    "DynamoDBTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "id",
            "KeyType" : "HASH"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
          "WriteCapacityUnits" : "5"
        },
        "TableName" : "csye6225"
      }

    },
  "webServerSecurityGroup" : {
   "Type" : "AWS::EC2::SecurityGroup",
   "Properties" : {
    "GroupName" : {"Ref" : "webSecurityGroupTag"},
    "GroupDescription" : "Security tag for web server",
    "SecurityGroupIngress" : [
     {
      "CidrIp" : "0.0.0.0/0",
      "FromPort" : 22,
      "IpProtocol" : "tcp",
      "ToPort" : 22
     },
     {
      "CidrIp" : "0.0.0.0/0",
      "FromPort" : 80,
      "IpProtocol" : "tcp",
      "ToPort" : 80
     },
     {
      "CidrIp" : "0.0.0.0/0",
      "FromPort" : 443,
      "IpProtocol" : "tcp",
      "ToPort" : 443
     },
     {
      "CidrIp" : "0.0.0.0/0",
      "FromPort" : 8080,
      "IpProtocol" : "tcp",
      "ToPort" : 8080
     }
     ],
    "VpcId" : {"Fn::ImportValue" : "networkVpcId"}
   }
  },
  "dbSecurityGroup" : {
    "Type" : "AWS::EC2::SecurityGroup",
    "Properties" : {
     "GroupName" : {"Ref" : "dbSecurityGroupTag"},
     "GroupDescription" : "Security tag for web server",
     "SecurityGroupIngress" : [
      {
       "SourceSecurityGroupId" : {"Ref" : "webServerSecurityGroup"},
       "FromPort" : 3306,
       "IpProtocol" : "tcp",
       "ToPort" : 3306
      }
      ],
     "VpcId" : {"Fn::ImportValue" : "networkVpcId"}
    }
  },
  "CodeDeployEC2ServiceRoleInstanceProfile": {
    "Type": "AWS::IAM::InstanceProfile",
    "Properties": {
      "Path": "/",
      "Roles": [{
        "Ref": "CodeDeployEC2ServiceRole"
      } ]
      }
  },
  "ec2Instance" : {
   "Type" : "AWS::EC2::Instance",
    "Properties" : {
     "Tags" : [ {"Key" : "Name", "Value" : {"Ref" : "ec2InstanceTag"}} ],
     "IamInstanceProfile": {
      "Ref": "CodeDeployEC2ServiceRoleInstanceProfile"
     },
     "ImageId" : { "Ref" : "amiId" },
     "KeyName" : { "Ref" : "keyTag" },
     "InstanceType" : "t2.micro",
     "DisableApiTermination" : "false",
     "BlockDeviceMappings": [
      {
       "DeviceName" : "/dev/sda1",
       "Ebs" : {
        "VolumeType": "gp2",
        "VolumeSize": "20"
       }
      }
     ],
     "SecurityGroupIds" : [{"Ref": "webServerSecurityGroup"}],
     "SubnetId" : {"Fn::ImportValue" : "publicSubnetOne"},
     "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -xe ",
                "echo '#!/bin/sh' >> /opt/tomcat/bin/setenv.sh ",
                {
                  "Fn::Sub": "sudo echo \"JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=dev\\\"\" >> /opt/tomcat/bin/setenv.sh"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://${myRDSInstance.Endpoint.Address}:3306/csye6225\"' >> /opt/tomcat/bin/setenv.sh"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=${DBUSER}\"' >> /opt/tomcat/bin/setenv.sh"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=${DBPWD}\"' >> /opt/tomcat/bin/setenv.sh"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dcloud.aws.region.static=us-east-1\"' >> /opt/tomcat/bin/setenv.sh"
                },
                {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Daws.s3.bucketname=${s3Attachment}\"' >> /opt/tomcat/bin/setenv.sh"
                }
                ,
               {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dpublish.metrics=true\"' >> /opt/tomcat/bin/setenv.sh"
               },
               {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dmetrics.server.hostname=localhost\"' >> /opt/tomcat/bin/setenv.sh"
               },
              {
                  "Fn::Sub": "echo 'JAVA_OPTS=\"$JAVA_OPTS -Dmetrics.server.port=8125\"' >> /opt/tomcat/bin/setenv.sh"
               },
                "chmod +x /opt/tomcat/bin/setenv.sh",
                "chown tomcat:tomcat /opt/tomcat/bin/setenv.sh",
                "sudo service tomcat restart "

              ]
           ]
         }
      }
    }
   },
 "myDBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
         "DBSubnetGroupDescription" : "Subnet description of db subnets",
         "SubnetIds" : [ {"Fn::ImportValue" : "publicSubnetTwo"},
          {"Fn::ImportValue" : "publicSubnetThree"} ],
         "Tags" : [ {"Key" : "Name", "Value" : "dbSubnetGroup"} ]
      }
   },
    "myRDSInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
         "DBName" : "csye6225",
         "AllocatedStorage" : "20",
         "Engine" : "MySQL",
        "EngineVersion" : "5.6.37",
        "DBInstanceClass" : "db.t2.medium",
        "MultiAZ" : false,
        "DBInstanceIdentifier" : "csye6225-spring2018",
        "MasterUsername" : { "Ref" : "DBUSER" },
        "MasterUserPassword" : { "Ref" : "DBPWD" },
        "DBSubnetGroupName" : {"Ref" : "myDBSubnetGroup"},
        "PubliclyAccessible" : true,
        "VPCSecurityGroups" : [{"Ref": "dbSecurityGroup"}]
      }
   },
    "CodeDeployEC2S3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CodeDeploy-EC2-S3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "s3CodeDeploy"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "s3CodeDeploy"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
	    {
	    "Action": [
                "s3:DeleteObject",
                "s3:Put*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "s3Attachment"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "s3Attachment"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
	    }
          ]
        },
        "Roles": [
          {
            "Ref": "CodeDeployEC2ServiceRole"
          }
        ]
      }
    },

	"CloudWatchLogPolicy": {
		"Type": "AWS::IAM::ManagedPolicy",
		"Properties": {
		"ManagedPolicyName": "CloudWatchPolicyName",
		"PolicyDocument": {
			"Version": "2012-10-17",
			"Statement": [
				{
				"Effect": "Allow",
				"Action": [
					"logs:CreateLogGroup",
					"logs:CreateLogStream",
					"logs:PutLogEvents",
					"logs:DescribeLogStreams"
					],
				"Resource": [
					"arn:aws:logs:*:*:*"
					]
				}]
				  }
			}
		},
    "CodeDeployEC2ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          {"Ref": "CloudWatchLogPolicy"},
	    "arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy",
	    "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
          ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "RoleName": "CodeDeployEC2ServiceRole"
      }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "RoleName": "CodeDeployServiceRole"
      }
    },
    "CodeDeployApplication": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": {"Ref" : "applicationName"}
      }
    },
    "DeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "CodeDeployApplication"
        },
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "DeploymentGroupName": "csye6225-webapp-deployment",
        "DeploymentStyle": {
          "DeploymentType": "IN_PLACE",
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "AutoRollbackConfiguration": {

          "Enabled": "true",

          "Events": [ "DEPLOYMENT_FAILURE" ]

        },
        "Ec2TagFilters": [
          {
            "Type": "KEY_AND_VALUE",
            "Key": "Name",
            "Value": {"Ref" : "ec2InstanceTag"}
          }
        ],
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CodeDeployServiceRole",
            "Arn"
          ]
        }
      }
    }
 }
}
